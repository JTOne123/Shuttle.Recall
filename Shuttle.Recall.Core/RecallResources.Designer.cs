//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Shuttle.Recall.Core {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class RecallResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal RecallResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Shuttle.Recall.Core.RecallResources", typeof(RecallResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An event queue with name &apos;{0}&apos; has already been added..
        /// </summary>
        internal static string DuplicateEventQueueName {
            get {
                return ResourceManager.GetString("DuplicateEventQueueName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event processor has already been started.  Event queue &apos;{0}&apos; cannot be added..
        /// </summary>
        internal static string EventProcessorStartedCannotAddQueue {
            get {
                return ResourceManager.GetString("EventProcessorStartedCannotAddQueue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event stream for id &apos;{0}&apos; is at version {1} but the caller expected it to be at version {2}..
        /// </summary>
        internal static string EventStreamConcurrencyException {
            get {
                return ResourceManager.GetString("EventStreamConcurrencyException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; does not implement IEventHandler&lt;T&gt;..
        /// </summary>
        internal static string InvalidEventHandlerType {
            get {
                return ResourceManager.GetString("InvalidEventHandlerType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No &apos;IEventProjectorPosition&apos; implementation has been specified..
        /// </summary>
        internal static string MissingEventProjectorPositionException {
            get {
                return ResourceManager.GetString("MissingEventProjectorPositionException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No &apos;IEventReader&apos; implementation has been specified..
        /// </summary>
        internal static string MissingEventReaderException {
            get {
                return ResourceManager.GetString("MissingEventReaderException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Handler type &apos;{0}&apos; does not have the required ProcessEvent method that handles domain event type &apos;{1}&apos;..
        /// </summary>
        internal static string ProcessEventMethodMissingException {
            get {
                return ResourceManager.GetString("ProcessEventMethodMissingException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; is not registered with the serializer so it cannot be serialized.  Please use [SerialierInstance].AddKnownType to add the type before attempting to serialize or deserialize a TransportMessage containing this type in the object graph of the message property..
        /// </summary>
        internal static string SerializerUnknownTypeExcption {
            get {
                return ResourceManager.GetString("SerializerUnknownTypeExcption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance of type &apos;{0}&apos; does not have a method named &apos;{1}&apos; that accepts event of type &apos;{2}&apos;.  It may be that the method is not public..
        /// </summary>
        internal static string UnhandledEventException {
            get {
                return ResourceManager.GetString("UnhandledEventException", resourceCulture);
            }
        }
    }
}
